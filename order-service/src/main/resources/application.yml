server:
  port: 8080

spring:
  application:
    name: order-service
  cloud:
    loadbalancer:
      ribbon:
        enabled: false
    openfeign:
      httpclient:
        connection-timeout: 3000
        max-connections: 200
        max-connections-per-route: 50
        ok-http:
          read-timeout: 30s
        okhttp:
          enabled: true
    kubernetes:
      discovery:
        all-namespaces: true

management:
  health:
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
    diskspace:
      enabled: false
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        http.server.requests: true
        resilience4j.circuitbreaker.calls: true
        resilience4j.retry.calls: true
  endpoint:
    health:
      show-details: always
    metrics:
      enable: true
  endpoints:
    web:
      exposure:
        include: health,metrics

resilience4j.circuitbreaker:
  configs:
    default:
      registerHealthIndicator: true
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 30
      minimumNumberOfCalls: 5
      permittedNumberOfCallsInHalfOpenState: 5
      automaticTransitionFromOpenToHalfOpenEnabled: true
      waitDurationInOpenState: 15s
      failureRateThreshold: 30
      eventConsumerBufferSize: 10
  instances:
    storage:
      baseConfig: default
resilience4j.retry:
  configs:
    default:
      maxAttempts: 2
      waitDuration: 100
resilience4j.ratelimiter:
  configs:
    default:
      registerHealthIndicator: true
      limitForPeriod: 100
      limitRefreshPeriod: 30s
      timeoutDuration: 5s
      eventConsumerBufferSize: 100
#resilience4j.bulkhead:
#  configs:
#    default:
#      maxConcurrentCalls: 100
#  instances:
#    storage:
#      maxWaitDuration: 100ms
#      maxConcurrentCalls: 20
#
#resilience4j.thread-pool-bulkhead:
#  configs:
#    default:
#      maxThreadPoolSize: 4
#      coreThreadPoolSize: 2
#      queueCapacity: 2
#  instances:
#    storage:
#      baseConfig: default
